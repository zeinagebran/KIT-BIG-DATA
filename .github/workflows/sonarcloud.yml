# This workflow will run coverage tests then ask SonarCloud to do quality scan and take coverage result.

name: SonarCloud analysis

on:
  push:
    branches:
      - master
  pull_request:
    types: [opened, synchronize, reopened]

permissions:
  pull-requests: read # allows SonarCloud to decorate PRs with analysis results

jobs:
  sonarcloud:
    name: SonarCloud
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Désactive les clones superficiels pour une analyse plus pertinente
      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: "3.12"
      - name: Install dependencies
        run: |
            python -m pip install --upgrade pip setuptools wheel
            # python -m pip install -r requirements.txt -r requirements-dev.txt
            # réduction temps dll :
            python -m pip install -r requirements.txt pytest pytest-mock coverage
            python -m nltk.downloader stopwords
      - name: Run coverage
        run: |
          coverage run -m pytest
          coverage xml
      - name: SonarCloud scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # Nécessaire pour obtenir des informations sur les PRs, le cas échéant
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}   # Token partagé avec SonarCloud pour pouvoir lancer le scan à distance
        with:
          args:
            -Dsonar.projectKey=${{ vars.SONAR_PROJECTKEY }}
            -Dsonar.organization=${{ vars.SONAR_ORGANIZATION }}
